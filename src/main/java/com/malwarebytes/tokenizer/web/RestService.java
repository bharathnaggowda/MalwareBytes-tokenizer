package com.malwarebytes.tokenizer.web;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.malwarebytes.tokenizer.Keys;
import com.malwarebytes.tokenizer.crypto.Encryption;
import com.malwarebytes.tokenizer.interfaces.KeysRepository;
import com.malwarebytes.tokenizer.kafka.Sender;

@Service
public class RestService {
	
	private static final Logger logger = LoggerFactory.getLogger(RestService.class);

    @Autowired
    private Sender sender;
    
    @Autowired
    private Encryption encryption;
    
    @Autowired
    private KeysRepository keysRepository;

	public void processRequest(String body, String transactionId){
		logger.info("Processing request for transactionId : ", transactionId);
		String secret = encryption.generateKey();
		logger.info("The secret key generated for transactionId: "+transactionId);
		String token = encryption.encrypt(body, secret, transactionId);
		logger.info("The token generated for transactionId: "+token);
		sender.send(transactionId, token);
		
		Keys keys = new Keys(transactionId, secret);
		logger.info("Saving the secret key for transactionId: "+transactionId+ " in Redis");
		keysRepository.save(keys);
	}
}
